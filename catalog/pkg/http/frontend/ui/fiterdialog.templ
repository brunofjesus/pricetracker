package ui

import product "github.com/brunofjesus/pricetracker/catalog/pkg/product"
import db_store "github.com/brunofjesus/pricetracker/catalog/internal/repository/store"
import "fmt"

templ FilterDialogComponent(filters product.FinderFilters, stores []db_store.Store) {
   <style type="text/css">
         .more-filter {
             font-size: 1em;
             text-decoration: unset;
             cursor: pointer;
         }

         .more-filter > * {
             cursor: pointer;
         }

         .more-filter:hover {
             background-color: #7f8c8d !important;
         }
   </style>

   <span class={"badge", "rounded-pill", "bg-secondary", "more-filter"} data-bs-toggle="modal" data-bs-target="#filterDialogModal">
        <i class="bi bi-toggles2"></i>
        <label>More Filters</label>
   </span>

   @FilterDialogModalComponent(filters, stores)
}

templ FilterDialogModalComponent(filters product.FinderFilters, stores []db_store.Store) {
  <div class="modal modal-lg" id="filterDialogModal">
    <div class="modal-dialog modal-dialog-scrollable" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Filters</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
            <span aria-hidden="true"></span>
          </button>
        </div>
        <form action="/" id="filtersForms">
            <div class="modal-body">
               <div class="row mb-3">
                  <div class="col-lg-4">
                    <label for="nameInput" class="form-label">Product</label>
                  </div>
                  <div class="col-lg-4">
                    <input type="text" class="form-control" name="name" id="nameInput" placeholder="Name" aria-describedby="nameHelp" value={filters.NameLike}/>
                    <div id="nameHelp" class="form-text">Product name to search for.</div>
                  </div>
                  <div class="col-lg-4">
                    <input type="text" class="form-control" name="brand" id="brandInput" placeholder="Brand" aria-describedby="brandHelp" value={filters.BrandLike}/>
                    <div id="brandHelp" class="form-text">Product brand to search for.</div>
                  </div>
                </div>
                <div class="row mb-3">
                    <div class="col-lg-4">
                        <label for="storeSelect" class="form-label">Store</label>
                    </div>
                    <div class="col-lg-8">
                        <select name="storeId" id="storeSelect" class="form-select" aria-label="Store">
                        if filters.StoreId == nil {
                          <option selected value="">All</option>
                        } else {
                          <option value="">All</option>
                        }
                        for _, store := range stores {
                            if filters.StoreId != nil && int64(*filters.StoreId) == store.StoreId {
                                <option selected value={fmt.Sprintf("%d",store.StoreId)}>{store.Name}</option>
                            } else {
                                <option value={fmt.Sprintf("%d",store.StoreId)}>{store.Name}</option>
                            }
                        }
                        </select>
                    </div>
                </div>
                @rangeFormControl("DiscountPercent", "Discount (%)", "Product price difference from average (%).", mul(filters.MinDiscountPercent, 100), mul(filters.MaxDiscountPercent, 100))
                @rangeFormControl("Difference", "Price Difference", "Product price difference from average (in currency).", div(filters.MinDifference, 100), div(filters.MaxDifference, 100))
                @rangeFormControl("Price", "Current Price", "Product current price.", div(filters.MinPrice, 100), div(filters.MaxPrice, 100))
                @rangeFormControl("AveragePrice", "Average Price", "Average price from last 30 days.", div(filters.MinAveragePrice, 100), div(filters.MaxAveragePrice, 100))
                @rangeFormControl("MinimumPrice", "Lowest Price", "Lowest price from last 30 days.", div(filters.MinMinimumPrice, 100), div(filters.MaxMinimumPrice, 100))
                @rangeFormControl("MaximumPrice", "Higher Price", "Higher price from last 30 days.", div(filters.MinMaximumPrice, 100), div(filters.MaxMaximumPrice, 100))
            </div>
            <div class="modal-footer">
              <button type="submit" class="btn btn-primary">Search</button>
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </form>
      </div>
    </div>
  </div>

  @formSubmitHandler()
}

script formSubmitHandler() {
    const form = document.getElementById("filtersForms")
        form.addEventListener("submit", (event) => {
            ["Difference", "Price", "AveragePrice", "MinimumPrice", "MaximumPrice"].forEach(convertRangeToCents)
            convertPercentToDecimal("DiscountPercent")
            document.getElementById('filterDialogModal').style = "display: none;"
            return true
          }
    )

    function convertPercentToDecimal(itemName) {
        const minInput = document.getElementById(`min${itemName}`)
        if (minInput.value) {
            minInput.value = Number(minInput.value) / 100
        }

        const maxInput = document.getElementById(`max${itemName}`)
        if (maxInput.value) {
            maxInput.value = Number(maxInput.value) / 100
        }
    }

    function convertRangeToCents(itemName) {
        const minInput = document.getElementById(`min${itemName}`)
        if (minInput.value) {
            minInput.value = Number(minInput.value) * 100
        }

        const maxInput = document.getElementById(`max${itemName}`)
        if (maxInput.value) {
            maxInput.value = Number(maxInput.value) * 100
        }
    }

    return true
}

templ rangeFormControl(id string, label string, help string, fromValue *float64, toValue *float64) {
  <div class="row mb-3">
    <div class="col-lg-4">
        <label class="form-label">{ label }</label>
    </div>
    <div class="col-lg-4">
      if fromValue != nil{
        <input type="number" step="any" name={fmt.Sprintf("min%s",id)} id={fmt.Sprintf("min%s",id)} class="form-control" placeholder="From" aria-describedby={fmt.Sprintf("%sHelp", id)} value={float64ToString(*fromValue)}/>
      } else {
        <input type="number" step="any" name={fmt.Sprintf("min%s",id)} id={fmt.Sprintf("min%s",id)} class="form-control" placeholder="From" aria-describedby={fmt.Sprintf("%sHelp", id)}/>
      }
    </div>
    <div class="col-lg-4">
      if toValue != nil {
        <input type="number" step="any" name={fmt.Sprintf("max%s",id)} id={fmt.Sprintf("max%s",id)} class="form-control" placeholder="To" aria-describedby={fmt.Sprintf("%sHelp", id)} value={float64ToString(*toValue)}/>
      } else {
        <input type="number" step="any" name={fmt.Sprintf("max%s",id)} id={fmt.Sprintf("max%s",id)} class="form-control" placeholder="To" aria-describedby={fmt.Sprintf("%sHelp", id)}/>
      }
    </div>
    <div id={fmt.Sprintf("%sHelp", id)} class="col-lg-8 offset-lg-4 form-text">{help}</div>
  </div>
}

func div(v *float64, d int) *float64 {
    if v == nil {
        return nil
    }

    r := *v / float64(d)
    return &r
}

func mul(v *float64, m int) *float64 {
    if v == nil {
        return nil
    }

    r := *v * float64(m)
    return &r
}